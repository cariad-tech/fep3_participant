// Copyright @ 2021 VW Group. All rights reserved.
//
// This Source Code Form is subject to the terms of the Mozilla
// Public License, v. 2.0. If a copy of the MPL was not distributed
// with this file, You can obtain one at https://mozilla.org/MPL/2.0/.
[

  // resets the jobs health state to 'ok'
  // indicating all errors have been fixed and
  // logging a message why the health state has been reset
  {
    "name": "resetHealth",
    "returns": {
      "error": // always returned error code
      {
        "error_code": 0, // error code
        "description": "error_description", // error description
        "line": "line", // line
        "file": "file", // file
        "function": "function" // function
      }
    }
  },

  // returns the jobs health structs
  {
    "name": "getHealth",
    "returns": {
      "jobs_healthiness": [
        {
          "job_name": "job1", // job name
          "cycle_time": 100, // cycle time in ns, only in clock triggered job
          "trigger_signals": "signal1, signal2", // trigger signals, only in data triggered job
          "simulation_timestamp": 2, // simutlation time in ns
          "last_execute_data_in_error": {
            "error_count": 1000, // times executeDataIn execution returned an error
            "simulation_timestamp": 2,
            "last_error": //  last error returned
            {
              "error_code": 0, // error code
              "description": "error_description", // error description
              "line": "line", // line
              "file": "file", // file
              "function": "function" // function
            }
          },
          "last_execute_error": {
            "error_count": 1000, // times execute execution returned an error
            "simulation_timestamp": 2,
            "last_error": //  last error returned
            {
              "error_code": 0, // error code
              "description": "error_description", // error description
              "line": "line", // line
              "file": "file", // file
              "function": "function" // function
            }
          },
          "last_execute_data_out_error": {
            "error_count": 1000, // times executeDataOut execution returned an error
            "simulation_timestamp": 2,
            "last_error": // last error returned
            {
              "error_code": 0, // error code
              "description": "error_description", // error description
              "line": "line", // line
              "file": "file", // file
              "function": "function" // function
            }
          }
        }
      ],
       "error" : // error if getHealth failed
        {
            "error_code": 0, // error code
            "description": "error_description", // error description
            "line": "line", // line
            "file": "file", // file
            "function": "function" // function
        }
    }
  }
]
